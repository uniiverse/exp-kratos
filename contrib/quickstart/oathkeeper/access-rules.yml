-
  id: "ory:kratos:public"
  upstream:
    preserve_host: true
    url: "http://kratos:4433"
    strip_path: /.ory/kratos/public
  match:
    url: "<{http,https}>://uvrs.tech:4455/.ory/kratos/public/<**>"
    methods:
      - GET
      - POST
      - PUT
      - DELETE
      - PATCH
  authenticators:
    -
      handler: noop
  authorizer:
    handler: allow
  mutators:
    - handler: noop

-
  id: "ory:kratos-selfservice-ui-node:anonymous"
  upstream:
    preserve_host: true
    url: "http://kratos-selfservice-ui-node:4435"
  match:
    url: "<{http,https}>://uvrs.tech:4455/<{registration,sessions,welcome,recovery,verification,login,error,**.css,**.js,**.png,}>"
    methods:
      - GET
  authenticators:
    -
      handler: anonymous
  authorizer:
    handler: allow
  mutators:
    -
      handler: noop

-
  id: "ory:kratos-selfservice-ui-node:protected"
  upstream:
    preserve_host: true
    url: "http://kratos-selfservice-ui-node:4435"
  match:
    url: "<{http,https}>://uvrs.tech:4455/<{debug,dashboard,settings}>"
    methods:
      - GET
  authenticators:
    -
      handler: cookie_session
  authorizer:
    handler: allow
  mutators:
    - handler: id_token
  errors:
    - handler: redirect
      config:
        to: https://uvrs.tech:4455/login

-
  id: "grpc:other"
  upstream:
    # url: "https://reports-service:9001"
    url: "https://host.docker.internal:9001"
  match:
    url: "<{http,https}>://uvrs.tech:4455/services.reports.v1.ReportsService/CreateGuestToken"
    methods:
      - POST
  authenticators:
    -
      handler: cookie_session
  authorizer:
    handler: allow
  mutators:
    - handler: header
      config:
        headers:
          Stuff: "Blah"
          # test_header: "Hello"
          # Metadata-test: "Hi"
          # Grpc-metadata-test: "Yo"
          # Grpc-Metadata-X-User-ID: "{{ print .Extra.id }}"
          # User-Agent: "Hello World"
          # X-User-First-Name: "{{ print .Extra.first_name }}"
          # X-User-Last-Name: "{{ print .Extra.last_name }}"
          # X-User-Email: "{{ print .Extra.email }}"

# TOUR: Backend service rule.
# -
#   id: "web:public"
#   upstream:
#     # preserve_host: true
#     url: "http://host.docker.internal:3000"
#   match:
#     url: "<{http,https}>://uvrs.tech:4455/api/<**>"
#     methods:
#       - GET
#       - POST
#       - PUT
#       - DELETE
#       - PATCH
#   authenticators:
#     -
#       handler: anonymous
#   authorizer:
#     handler: allow
#   mutators:
    -
      handler: noop

-
  id: "web:protected"
  upstream:
    # preserve_host: true
    url: "http://host.docker.internal:3000"
  match:
    url: "<{http,https}>://uvrs.tech:4455/api/v2/current_user.json"
    methods:
      - GET
  authenticators:
    -
      handler: cookie_session
  authorizer:
    handler: allow
  mutators:
    - handler: header
      config:
        headers:
          Grpc-Metadata-X-User-ID: "{{ print .Extra.id }}"
          User-Agent: "Hello World"
          # X-User-First-Name: "{{ print .Extra.first_name }}"
          # X-User-Last-Name: "{{ print .Extra.last_name }}"
          # X-User-Email: "{{ print .Extra.email }}"

# # GRPC Service (API)
# - 
#   id: "grpc_service1:anonymous"
#   match:
#     root: "uvrs.tech"
#     full_method: "com.<**>"

# - 
#   id: "grpc_service1:protected"
#   match:
#     root: "uvrs.tech"
#     full_method: "com.<**>"

# -
#   id: "grpc:protected"
#   upstream:
#     preserve_host: true
#     # url: "http://localhost:9000"
#     url: "http://host.docker.internal:9000"
#   match:
#     authority: uvrs.tech:9000
#     full_method: services.reports.v1.ReportsService/CreateGuestToken
#   methods:
#     - GET
#     - POST
#     # url: "https://uvrs.tech:4455/<**>"
#     # methods:
#     #   - GET
#     #   - POST
#     # my.grpc.package/MyService/MyMethod
#   # match:
#   #   url: "grpc://uvrs.tech:4000"
#   #   methods:
#   #     - GET
#   authenticators:
#     -
#       handler: anonymous
#   authorizer:
#     handler: allow
#   mutators:
#     -
#       handler: noop

# -
#   id: "auth-frontend:anonymous"
#   upstream:
#     preserve_host: true
#     url: "http://host.docker.internal:3004"
#   match:
#     url: "<http|https>://uvrs.tech:4455/<{registration,welcome,recovery,verification,login,error,**.css,**.js,**.ts,**.tsx,**.mjs,@id/**,@vite/client,@react-refresh,**.png,}>"
#     methods:
#       - GET
#   authenticators:
#     -
#       handler: anonymous
#   authorizer:
#     handler: allow
#   mutators:
#     -
#       handler: noop

# -
#   id: "auth-frontend:protected"
#   upstream:
#     preserve_host: true
#     url: "http://host.docker.internal:3004"
#   match:
#     url: "<http|https>://uvrs.tech:4455/<{debug,dashboard,settings}>"
#     methods:
#       - GET
#   authenticators:
#     -
#       handler: cookie_session
#   authorizer:
#     handler: allow
#   mutators:
#     - handler: id_token
#   errors:
#     - handler: redirect
#       config:
#         to: https://uvrs.tech:4455/login

# -
#   id: "grpc:next"
#   upstream:

# -
#   id: "grpc:other"
#   upstream:
#     # url: "https://httpbin.org/anything/header"
#     url: "http://reports-service:9001"
#     # preserve_host: true
#     # strip_path: /*
#   match:
#     url: "http://reports-service:9001"
#     methods:
#       - POST
#       - PRI
#   authenticators:
#     -
#       handler: anonymous
#   authorizer:
#     handler: allow
#   mutators:
#     -
#       handler: noop

# TOUR: PRI STUFF
# -
#   id: "grpc:connection"
#   upstream:
#     # url: "https://httpbin.org/anything/header"
#     # url: "http://reports-service:9001"
#     url: "http://service-go:50051"
#     # url: "http://localhost:50051"
#     strip_path: /*
#   match:
#     url: "<http|https>://<.*>"
#     methods:
#       - POST
#       - PRI
#   authenticators:
#     -
#       handler: anonymous
#   authorizer:
#     handler: allow
#   mutators:
#     -
#       handler: noop

# -
#   id: "grpc2:connection"
#   upstream:
#     # url: "https://httpbin.org/anything/header"
#     url: "http://service-go:50051"
#     # strip_path: /*
#   match:
#     url: "<http|https>://uvrs.tech:4455"
#     methods:
#       - POST
#       - PRI
#       - GET
#       - PUT
#       - HEAD
#       - PATCH
#       - DELETE
#       - CONNECT
#       - TRACE
#   authenticators:
#     -
#       handler: anonymous
#   authorizer:
#     handler: allow
#   mutators:
#     -
#       handler: noop

# -
#   id: "grpc:public"
#   upstream:
#     url: "https://localhost:9001"
#     # preserve_host: true
#   # match:
#   #   url: "http://localhost:4455/<**>"
#   #   methods:
#   #     - POST
#   #     - HEAD
#   #     - GET
#   #     - PUT
#   #     - PATCH
#   #     - DELETE
#   #     - CONNECT
#   #     - TRACE
#   match:
#     authority: uvrs.tech:4455
#     full_method: services.reports.v1.ReportsService/CreateGuestToken
#   authenticators:
#     -
#       handler: anonymous
#   authorizer:
#     handler: allow
#   mutators:
#     -
#       handler: noop

# -
#   id: "web:protected"
#   upstream:
#     preserve_host: true
#     url: "http://host.docker.internal:8080"
#   match:
#     url: "https://uvrs.tech:4455/api/<**>"
#     methods:
#       - GET
#       - POST
#       - PUT
#       - DELETE
#       - PATCH
#   authenticators:
#     -
#       handler: cookie_session
#   authorizer:
#     handler: allow
#   mutators:
#     - handler: header
#       config:
#         headers:
#           X-User-First-Name: "{{ print .Extra.first_name }}"
#           X-User-Last-Name: "{{ print .Extra.last_name }}"
#           X-User-ID: "{{ print .Extra.universe_id }}"
#           X-User-Email: "{{ print .Extra.email }}"
#   errors:
#     - handler: redirect
#       config:
#         to: https://uvrs.tech:4455/login

# TOUR: Ideal backend service rule?
# Subdomains and allow subdomain CORS sharing: https://www.ory.sh/docs/kratos/guides/setting-up-cors
# -
#   id: "web:protected"
#   upstream:
#     preserve_host: true
#     url: "http://host.docker.internal:8080"
#     strip_path: /.web/public
#   match:
#     url: "https://uvrs.tech:4455/.web/public/<**>"
#     methods:
#       - GET
#       - POST
#       - PUT
#       - DELETE
#       - PATCH
#   authenticators:
#     -
#       handler: cookie_session
#   authorizer:
#     handler: allow
#   mutators:
#     - handler: header
#       config:
#         headers:
#           X-User-First-Name: "{{ print .Extra.first_name }}"
#           X-User-Last-Name: "{{ print .Extra.last_name }}"
#           X-User-ID: "{{ print .Extra.universe_id }}"
#           X-User-Email: "{{ print .Extra.email }}"
#   errors:
#     - handler: redirect
#       config:
#         to: https://uvrs.tech:4455/login